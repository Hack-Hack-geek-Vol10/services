syntax = "proto3";

option go_package = "api/collab-service/v1";

package token.v1;

// service ってのが、gRPCサービスのハンドラとしての役割を果たす
// ここには、gRPCサービスのメソッドを定義する
// 書き方例
// rpc GetToken (GetTokenRequest) returns (GetTokenResponse);
//  ↑　　　↑　　　　　　↑　　　　　　　　　　　　　↑
// 呪い　メソッド名　　リクエスト型　　　　　レスポンス型
service TokenService {
  rpc CreateEditor (CreateEditorRequest) returns (CreateEditorResponse);
  rpc GetEditor (GetEditorRequest) returns (GetEditorResponse);
  rpc UpdateEditor (UpdateEditorRequest) returns (UpdateEditorResponse);
  rpc DeleteEditor (DeleteEditorRequest) returns (DeleteEditorResponse);
}

// リクエスト, レスポンスの型を定義する
// ここで定義した型は、gRPCサービスのメソッドの引数や戻り値として使える
// 書き方例
// まじない　　型名
// 　↓   　　　　↓　　　
// https://qiita.com/yukina-ge/items/98fe190cef2024d45fbd

message CreateEditorRequest {
  string project_id = 1;
  string text = 2;
}

message CreateEditorResponse {
  string text= 1;
}

message GetEditorRequest {
  string project_id = 1;
}

message GetEditorResponse {
  string project_id = 1;
}

message UpdateEditorRequest {
  string project_id = 1;
  string text = 2;
}

message UpdateEditorResponse {
  string project_id = 1;
}

message DeleteEditorRequest {
  string project_id = 1;
}

message DeleteEditorResponse {
  string project_id = 1;
}